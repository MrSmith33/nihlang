/// Copyright: Copyright (c) 2025 Andrey Penechko
/// License: $(WEB boost.org/LICENSE_1_0.txt, Boost License 1.0)
/// Authors: Andrey Penechko
/// Auto-generated by vox.fe.lexer.generator
module vox.fe.lexer.token_type;

enum TokenType : ubyte {
	invalid,       //
	eoi,           //
	lit_string,    // ""
	lit_char,      // ''
	slash,         // /
	slash_eq,      // /=
	comment,       // // /**/
	inval_comment, // /* /**
	lit_int_dec,   // 0|([1-9][0-9_]*)
	lit_int_hex,   // 0[xX][0-9A-Fa-f][0-9A-Fa-f_]*
	lit_int_bin,   // 0[bB][01][01_]*
	and,           // &
	and2,          // &&
	and_eq,        // &=
	at,            // @
	backslash,     // \
	colon,         // :
	comma,         // ,
	dot,           // .
	dot2,          // ..
	dot3,          // ...
	eq,            // =
	eq2,           // ==
	more,          // >
	more_eq,       // >=
	more2,         // >>
	more2_eq,      // >>=
	more3,         // >>>
	more3_eq,      // >>>=
	less,          // <
	less_eq,       // <=
	less2,         // <<
	less2_eq,      // <<=
	minus,         // -
	minus_eq,      // -=
	minus2,        // --
	not,           // !
	not_eq,        // !=
	or,            // |
	or_eq,         // |=
	or2,           // ||
	percent,       // %
	percent_eq,    // %=
	plus,          // +
	plus_eq,       // +=
	plus2,         // ++
	question,      // ?
	semicolon,     // ;
	star,          // *
	star_eq,       // *=
	tilde,         // ~
	tilde_eq,      // ~=
	xor,           // ^
	xor_eq,        // ^=
	lparen,        // (
	rparen,        // )
	lbracket,      // [
	rbracket,      // ]
	lcurly,        // {
	rcurly,        // }
	kw_alias,      // alias
	kw_auto,       // auto
	kw_bool,       // bool
	kw_break,      // break
	kw_cast,       // cast
	kw_continue,   // continue
	kw_do,         // do
	kw_else,       // else
	kw_enum,       // enum
	kw_f32,        // f32
	kw_f64,        // f64
	kw_false,      // false
	kw_for,        // for
	kw_function,   // function
	kw_i16,        // i16
	kw_i32,        // i32
	kw_i64,        // i64
	kw_i8,         // i8
	kw_if,         // if
	kw_import,     // import
	kw_isz,        // isz
	kw_module,     // module
	kw_noreturn,   // noreturn
	kw_null,       // null
	kw_return,     // return
	kw_struct,     // struct
	kw_switch,     // switch
	kw_true,       // true
	kw_u16,        // u16
	kw_u32,        // u32
	kw_u64,        // u64
	kw_u8,         // u8
	kw_union,      // union
	kw_usz,        // usz
	kw_void,       // void
	kw_while,      // while
	id,            // [a-zA-Z_] [a-zA-Z_0-9]*
	hash_if,       // #if
	hash_version,  // #version
	hash_inline,   // #inline
	hash_assert,   // #assert
	hash_foreach,  // #foreach
	hash_alias,    // #alias
	hash_type,     // #type
	dollar_alias,  // $alias
	dollar_type,   // $type
	dollar_id,     // $ [a-zA-Z_] [a-zA-Z_0-9]*
}
